{"status":"ok","sql":"\\/ZmFtaWx5PVBvcHBpbnM6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPjxzdHlsZT5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpey5jb250YWluZXJ7d2lkdGg6NTkycHh9fTwvc3R5bGU+PC9oZWFkPjxib2R5IHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgd2lkdGg6IDEwMCU7IG1pbi1oZWlnaHQ6IDEwMHZoOyBib3JkZXI6IDA7IGJvcmRlci1zcGFjaW5nOiAwOyBwYWRkaW5nOiAxNnB4IDI0cHggNDBweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOyBmb250LWZhbWlseTogJydQb3BwaW5zJycsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogIzM0MzQzNDsgIiA+PHRib2R5Pjx0cj48dGQgc3R5bGU9InBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiA4cHg7IG92ZXJmbG93OiBoaWRkZW47ICIgY2xhc3M9ImNvbnRhaW5lciIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAxNnB4IDI0cHg7IGJhY2tncm91bmQtY29sb3I6ICM2YzcwZGMiPjxoMSBzdHlsZT0iIGNvbG9yOiAjZmZmOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMzJweDsgZm9udC13ZWlnaHQ6IDYwMDsgIiA+QXBwb2ludG1lbnQgY2FuY2VsZWQ8L2gxPjwvdGQ+PC90cj48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAzMnB4OyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyNHB4Ij48cCBzdHlsZT0ibWFyZ2luOiAwIj5IaSB7Y3VzdG9tZXJfZnVsbF9uYW1lfSw8YnI+PGJyPllvdXIgYXBwb2ludG1lbnQgZm9yIHtzZXJ2aWNlX25hbWV9IHNlcnZpY2Ugd2l0aCB7c3RhZmZfbmFtZX0gb24gIHthcHBvaW50bWVudF9kYXRlX3RpbWV9IGF0IHtsb2NhdGlvbl9uYW1lfSBoYXMgYmVlbiBjYW5jZWxlZC48YnI+PGJyPkJlc3QgUmVnYXJkcyw8YnI+e2NvbXBhbnlfbmFtZX0uPC9wPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L2JvZHk+PC9odG1sPicgV0hFUkUgYHN1YmplY3RgIElTIE5VTEwgQU5EIGBib2R5YCBJUyBOVUxMIEFORCBgdHlwZWAgPSAnZW1haWwnIEFORCBgc2VuZF90b2AgPSAnY3VzdG9tZXInIEFORCBgYWN0aW9uYCA9ICdhcHBvaW50bWVudF9jYW5jZWxlZCc7ClVQREFURSBge3RhYmxlcHJlZml4fW5vdGlmaWNhdGlvbnNgIFNFVCBgc3ViamVjdGAgPSAnQXBwb2ludG1lbnQgY2FuY2VsZWQnLCBgYm9keWAgPSAnPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIGxhbmc9ImVuIj48aGVhZD48bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz48bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20iIC8+PGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRANDAwOzUwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCIgLz48c3R5bGU+QG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KXsuY29udGFpbmVye3dpZHRoOjU5MnB4fX08L3N0eWxlPjwvaGVhZD48Ym9keSBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIHdpZHRoOiAxMDAlOyBtaW4taGVpZ2h0OiAxMDB2aDsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgcGFkZGluZzogMTZweCAyNHB4IDQwcHggMjRweDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsgZm9udC1mYW1pbHk6ICcnUG9wcGlucycnLCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IDQwMDsgY29sb3I6ICMzNDM0MzQ7ICIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJvcmRlcjogMDsgYm9yZGVyLXNwYWNpbmc6IDA7IG1hcmdpbjogMCBhdXRvIDQwcHggYXV0bzsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgYm9yZGVyLXJhZGl1czogOHB4OyBvdmVyZmxvdzogaGlkZGVuOyAiIGNsYXNzPSJjb250YWluZXIiID48dGJvZHk+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMTZweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3MGRjIj48aDEgc3R5bGU9IiBjb2xvcjogI2ZmZjsgdGV4dC1hbGlnbjogY2VudGVyOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMjRweDsgbGluZS1oZWlnaHQ6IDMycHg7IGZvbnQtd2VpZ2h0OiA2MDA7ICIgPkFwcG9pbnRtZW50IGNhbmNlbGVkPC9oMT48L3RkPjwvdHI+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMzJweDsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjRweCI+PHAgc3R5bGU9Im1hcmdpbjogMCI+SGkge3N0YWZmX25hbWV9LDxicj48YnI+WW91ciBhcHBvaW50bWVudCBmb3Ige3NlcnZpY2VfbmFtZX0gc2VydmljZSB3aXRoIHtjdXN0b21lcl9mdWxsX25hbWV9IG9uICB7YXBwb2ludG1lbnRfZGF0ZV90aW1lfSBhdCB7bG9jYXRpb25fbmFtZX0gaGFzIGJlZW4gY2FuY2VsZWQuPGJyPjxicj5CZXN0IFJlZ2FyZHMsPGJyPntjb21wYW55X25hbWV9LjwvcD48L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC9ib2R5PjwvaHRtbD4nIFdIRVJFIGBzdWJqZWN0YCBJUyBOVUxMIEFORCBgYm9keWAgSVMgTlVMTCBBTkQgYHR5cGVgID0gJ2VtYWlsJyBBTkQgYHNlbmRfdG9gID0gJ3N0YWZmJyBBTkQgYGFjdGlvbmAgPSAnYXBwb2ludG1lbnRfY2FuY2VsZWQnOwoKVVBEQVRFIGB7dGFibGVwcmVmaXh9bm90aWZpY2F0aW9uc2AgU0VUIGBzdWJqZWN0YCA9ICdOZXcgQXBwb2ludG1lbnQnLCBgYm9keWAgPSAnPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIGxhbmc9ImVuIj48aGVhZD48bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz48bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20iIC8+PGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRANDAwOzUwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCIgLz48c3R5bGU+QG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KXsuY29udGFpbmVye3dpZHRoOjU5MnB4fX08L3N0eWxlPjwvaGVhZD48Ym9keSBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIHdpZHRoOiAxMDAlOyBtaW4taGVpZ2h0OiAxMDB2aDsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgcGFkZGluZzogMTZweCAyNHB4IDQwcHggMjRweDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsgZm9udC1mYW1pbHk6ICcnUG9wcGlucycnLCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IDQwMDsgY29sb3I6ICMzNDM0MzQ7ICIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJvcmRlcjogMDsgYm9yZGVyLXNwYWNpbmc6IDA7IG1hcmdpbjogMCBhdXRvIDQwcHggYXV0bzsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgYm9yZGVyLXJhZGl1czogOHB4OyBvdmVyZmxvdzogaGlkZGVuOyAiIGNsYXNzPSJjb250YWluZXIiID48dGJvZHk+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMTZweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3MGRjIj48aDEgc3R5bGU9IiBjb2xvcjogI2ZmZjsgdGV4dC1hbGlnbjogY2VudGVyOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMjRweDsgbGluZS1oZWlnaHQ6IDMycHg7IGZvbnQtd2VpZ2h0OiA2MDA7ICIgPiBOZXcgYXBwb2ludG1lbnQ8L2gxPjwvdGQ+PC90cj48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAzMnB4OyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyNHB4Ij48cCBzdHlsZT0ibWFyZ2luOiAwIj4gSGkge2N1c3RvbWVyX2Z1bGxfbmFtZX0sPGJyPjxicj4gWW91IGhhdmUgc3VjY2Vzc2Z1bGx5IHNjaGVkdWxlZCBhbiBhcHBvaW50bWVudCBmb3Ige3NlcnZpY2VfbmFtZX0uPGJyPiBZb3VyIGFwcG9pbnRtZW50IHdpbGwgdGFrZSBwbGFjZSBvbiB7YXBwb2ludG1lbnRfZGF0ZV90aW1lfSBhdCB7bG9jYXRpb25fbmFtZX0gYW5kIHdpbGwgdGFrZSB7c2VydmljZV9kdXJhdGlvbn0uPGJyPiBXZSBsb29rIGZvcndhcmQgdG8gb3VyIG1lZXRpbmcuPGJyPjxicj4gVGhhbmsgeW91IGZvciBjaG9vc2luZyB7Y29tcGFueV9uYW1lfS48L3A+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvYm9keT48L2h0bWw+JyBXSEVSRSBgc3ViamVjdGAgSVMgTlVMTCBBTkQgYGJvZHlgIElTIE5VTEwgQU5EIGB0eXBlYCA9ICdlbWFpbCcgQU5EIGBzZW5kX3RvYCA9ICdjdXN0b21lcicgQU5EIGBhY3Rpb25gID0gJ25ld19ib29raW5nJzsKVVBEQVRFIGB7dGFibGVwcmVmaXh9bm90aWZpY2F0aW9uc2AgU0VUIGBzdWJqZWN0YCA9ICdOZXcgQXBwb2ludG1lbnQnLCBgYm9keWAgPSAnPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIGxhbmc9ImVuIj48aGVhZD48bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz48bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20iIC8+PGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRANDAwOzUwMCZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCIgLz48c3R5bGU+QG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KXsuY29udGFpbmVye3dpZHRoOjU5MnB4fX08L3N0eWxlPjwvaGVhZD48Ym9keSBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIHdpZHRoOiAxMDAlOyBtaW4taGVpZ2h0OiAxMDB2aDsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgcGFkZGluZzogMTZweCAyNHB4IDQwcHggMjRweDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsgZm9udC1mYW1pbHk6ICcnUG9wcGlucycnLCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IDQwMDsgY29sb3I6ICMzNDM0MzQ7ICIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAwIj48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJvcmRlcjogMDsgYm9yZGVyLXNwYWNpbmc6IDA7IG1hcmdpbjogMCBhdXRvIDQwcHggYXV0bzsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgYm9yZGVyLXJhZGl1czogOHB4OyBvdmVyZmxvdzogaGlkZGVuOyAiIGNsYXNzPSJjb250YWluZXIiID48dGJvZHk+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMTZweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3MGRjIj48aDEgc3R5bGU9IiBjb2xvcjogI2ZmZjsgdGV4dC1hbGlnbjogY2VudGVyOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMjRweDsgbGluZS1oZWlnaHQ6IDMycHg7IGZvbnQtd2VpZ2h0OiA2MDA7ICIgPiBOZXcgYXBwb2ludG1lbnQ8L2gxPjwvdGQ+PC90cj48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAzMnB4OyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyNHB4Ij48cCBzdHlsZT0ibWFyZ2luOiAwIj5IaSB7c3RhZmZfbmFtZX0sPGJyPjxicj5XZSB3b3VsZCBsaWtlIHRvIGluZm9ybSB5b3UgdGhhdCB5b3UgaGF2ZSBvbmUgY29uZmlybWVkIHtzZXJ2aWNlX25hbWV9IGFwcG9pbnRtZW50IGF0IHtsb2NhdGlvbl9uYW1lfSBvbiB7YXBwb2ludG1lbnRfZGF0ZX0gYXQge2FwcG9pbnRtZW50X3N0YXJ0X3RpbWV9Ljxicj5UaGUgYXBwb2ludG1lbnQgaXMgYWRkZWQgdG8geW91ciBzdGFmZiBjYWxlbmRhci48YnI+PGJyPkJlc3QgUmVnYXJkcyw8YnI+e2NvbXBhbnlfbmFtZX0uPC9wPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L2JvZHk+PC9odG1sPicgV0hFUkUgYHN1YmplY3RgIElTIE5VTEwgQU5EIGBib2R5YCBJUyBOVUxMIEFORCBgdHlwZWAgPSAnZW1haWwnIEFORCBgc2VuZF90b2AgPSAnc3RhZmYnIEFORCBgYWN0aW9uYCA9ICduZXdfYm9va2luZyc7CgpVUERBVEUgYHt0YWJsZXByZWZpeH1ub3RpZmljYXRpb25zYCBTRVQgYHN1YmplY3RgID0gJ0FwcG9pbnRtZW50IFJlLXNjaGVkdWxlZCcsIGBib2R5YCA9ICc8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgLz48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI\/ZmFtaWx5PVBvcHBpbnM6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPjxzdHlsZT5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpey5jb250YWluZXJ7d2lkdGg6NTkycHh9fTwvc3R5bGU+PC9oZWFkPjxib2R5IHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgd2lkdGg6IDEwMCU7IG1pbi1oZWlnaHQ6IDEwMHZoOyBib3JkZXI6IDA7IGJvcmRlci1zcGFjaW5nOiAwOyBwYWRkaW5nOiAxNnB4IDI0cHggNDBweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOyBmb250LWZhbWlseTogJydQb3BwaW5zJycsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogIzM0MzQzNDsgIiA+PHRib2R5Pjx0cj48dGQgc3R5bGU9InBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiA4cHg7IG92ZXJmbG93OiBoaWRkZW47ICIgY2xhc3M9ImNvbnRhaW5lciIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAxNnB4IDI0cHg7IGJhY2tncm91bmQtY29sb3I6ICM2YzcwZGMiPjxoMSBzdHlsZT0iIGNvbG9yOiAjZmZmOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMzJweDsgZm9udC13ZWlnaHQ6IDYwMDsgIiA+QXBwb2ludG1lbnQgcmUtc2NoZWR1bGVkPC9oMT48L3RkPjwvdHI+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMzJweDsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjRweCI+PHAgc3R5bGU9Im1hcmdpbjogMCI+SGkge2N1c3RvbWVyX2Z1bGxfbmFtZX0sPGJyPjxicj5Zb3VyIGFwcG9pbnRtZW50IGZvciB7c2VydmljZV9uYW1lfSBzZXJ2aWNlIHdpdGgge3N0YWZmX25hbWV9IGhhcyBiZWVuIHNjaGVkdWxlZC48YnI+WW91IGFwcG9pbnRtZW50IHdpbGwgdGFrZSBwbGFjZSBvbiB7YXBwb2ludG1lbnRfZGF0ZV90aW1lfSBhdCB7bG9jYXRpb25fbmFtZX0uPGJyPldlIGxvb2sgZm9yd2FyZCB0byBvdXIgbWVldGluZy48YnI+PGJyPlRoYW5rIHlvdSBmb3IgY2hvb3Npbmcge2NvbXBhbnlfbmFtZX0uPC9wPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L2JvZHk+PC9odG1sPicgV0hFUkUgYHN1YmplY3RgIElTIE5VTEwgQU5EIGBib2R5YCBJUyBOVUxMIEFORCBgdHlwZWAgPSAnZW1haWwnIEFORCBgc2VuZF90b2AgPSAnY3VzdG9tZXInIEFORCBgYWN0aW9uYCA9ICdlZGl0X2Jvb2tpbmcnOwpVUERBVEUgYHt0YWJsZXByZWZpeH1ub3RpZmljYXRpb25zYCBTRVQgYHN1YmplY3RgID0gJ0FwcG9pbnRtZW50IFJlLXNjaGVkdWxlZCcsIGBib2R5YCA9ICc8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgLz48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI\/ZmFtaWx5PVBvcHBpbnM6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPjxzdHlsZT5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpey5jb250YWluZXJ7d2lkdGg6NTkycHh9fTwvc3R5bGU+PC9oZWFkPjxib2R5IHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgd2lkdGg6IDEwMCU7IG1pbi1oZWlnaHQ6IDEwMHZoOyBib3JkZXI6IDA7IGJvcmRlci1zcGFjaW5nOiAwOyBwYWRkaW5nOiAxNnB4IDI0cHggNDBweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOyBmb250LWZhbWlseTogJydQb3BwaW5zJycsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogIzM0MzQzNDsgIiA+PHRib2R5Pjx0cj48dGQgc3R5bGU9InBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiA4cHg7IG92ZXJmbG93OiBoaWRkZW47ICIgY2xhc3M9ImNvbnRhaW5lciIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAxNnB4IDI0cHg7IGJhY2tncm91bmQtY29sb3I6ICM2YzcwZGMiPjxoMSBzdHlsZT0iIGNvbG9yOiAjZmZmOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMzJweDsgZm9udC13ZWlnaHQ6IDYwMDsgIiA+QXBwb2ludG1lbnQgcmUtc2NoZWR1bGVkPC9oMT48L3RkPjwvdHI+PHRyPjx0ZCBzdHlsZT0icGFkZGluZzogMzJweDsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjRweCI+PHAgc3R5bGU9Im1hcmdpbjogMCI+SGkge3N0YWZmX25hbWV9LDxicj48YnI+WW91ciBhcHBvaW50bWVudCBmb3Ige3NlcnZpY2VfbmFtZX0gc2VydmljZSB3aXRoIHtjdXN0b21lcl9mdWxsX25hbWV9IGhhcyBiZWVuIHNjaGVkdWxlZC48YnI+WW91IGFwcG9pbnRtZW50IHdpbGwgdGFrZSBwbGFjZSBvbiB7YXBwb2ludG1lbnRfZGF0ZV90aW1lfSBhdCB7bG9jYXRpb25fbmFtZX0uPGJyPldlIGxvb2sgZm9yd2FyZCB0byBvdXIgbWVldGluZy48YnI+PGJyPkJlc3QgUmVnYXJkcyw8YnI+e2NvbXBhbnlfbmFtZX0uPC9wPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L2JvZHk+PC9odG1sPicgV0hFUkUgYHN1YmplY3RgIElTIE5VTEwgQU5EIGBib2R5YCBJUyBOVUxMIEFORCBgdHlwZWAgPSAnZW1haWwnIEFORCBgc2VuZF90b2AgPSAnc3RhZmYnIEFORCBgYWN0aW9uYCA9ICdlZGl0X2Jvb2tpbmcnOwoKVVBEQVRFIGB7dGFibGVwcmVmaXh9bm90aWZpY2F0aW9uc2AgU0VUIGBzdWJqZWN0YCA9ICdSZW1pbmRlcicsIGBib2R5YCA9ICc8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgLz48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI\/ZmFtaWx5PVBvcHBpbnM6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPjxzdHlsZT5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpey5jb250YWluZXJ7d2lkdGg6NTkycHh9fTwvc3R5bGU+PC9oZWFkPjxib2R5IHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgd2lkdGg6IDEwMCU7IG1pbi1oZWlnaHQ6IDEwMHZoOyBib3JkZXI6IDA7IGJvcmRlci1zcGFjaW5nOiAwOyBwYWRkaW5nOiAxNnB4IDI0cHggNDBweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOyBmb250LWZhbWlseTogJydQb3BwaW5zJycsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogIzM0MzQzNDsgIiA+PHRib2R5Pjx0cj48dGQgc3R5bGU9InBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiA4cHg7IG92ZXJmbG93OiBoaWRkZW47ICIgY2xhc3M9ImNvbnRhaW5lciIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAxNnB4IDI0cHg7IGJhY2tncm91bmQtY29sb3I6ICM2YzcwZGMiPjxoMSBzdHlsZT0iIGNvbG9yOiAjZmZmOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMzJweDsgZm9udC13ZWlnaHQ6IDYwMDsgIiA+UmVtaW5kZXI8L2gxPjwvdGQ+PC90cj48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAzMnB4OyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyNHB4Ij48cCBzdHlsZT0ibWFyZ2luOiAwIj5IaSB7Y3VzdG9tZXJfZnVsbF9uYW1lfSw8YnI+PGJyPldlIHdvdWxkIGxpa2UgdG8gcmVtaW5kIHlvdSB0aGF0IHlvdSBoYXZlIGFuIGFwcG9pbnRtZW50IGZvciB7c2VydmljZV9uYW1lfSBvbiB7YXBwb2ludG1lbnRfZGF0ZV90aW1lfSBhdCB7bG9jYXRpb25fbmFtZX0uPGJyPldlIGFyZSBsb29raW5nIGZvcndhcmQgdG8gb3VyIG1lZXRpbmcuPGJyPjxicj5UaGFuayB5b3UgZm9yIGNob29zaW5nIHtjb21wYW55X25hbWV9LjwvcD48L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC9ib2R5PjwvaHRtbD4nIFdIRVJFIGBzdWJqZWN0YCBJUyBOVUxMIEFORCBgYm9keWAgSVMgTlVMTCBBTkQgYHR5cGVgID0gJ2VtYWlsJyBBTkQgYHNlbmRfdG9gID0gJ2N1c3RvbWVyJyBBTkQgYGFjdGlvbmAgPSAncmVtaW5kZXJfYmVmb3JlJzsKVVBEQVRFIGB7dGFibGVwcmVmaXh9bm90aWZpY2F0aW9uc2AgU0VUIGBzdWJqZWN0YCA9ICdSZW1pbmRlcicsIGBib2R5YCA9ICc8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgLz48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI\/ZmFtaWx5PVBvcHBpbnM6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPjxzdHlsZT5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpey5jb250YWluZXJ7d2lkdGg6NTkycHh9fTwvc3R5bGU+PC9oZWFkPjxib2R5IHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgd2lkdGg6IDEwMCU7IG1pbi1oZWlnaHQ6IDEwMHZoOyBib3JkZXI6IDA7IGJvcmRlci1zcGFjaW5nOiAwOyBwYWRkaW5nOiAxNnB4IDI0cHggNDBweCAyNHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOyBmb250LWZhbWlseTogJydQb3BwaW5zJycsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogIzM0MzQzNDsgIiA+PHRib2R5Pjx0cj48dGQgc3R5bGU9InBhZGRpbmc6IDAiPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyOiAwOyBib3JkZXItc3BhY2luZzogMDsgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiA4cHg7IG92ZXJmbG93OiBoaWRkZW47ICIgY2xhc3M9ImNvbnRhaW5lciIgPjx0Ym9keT48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAxNnB4IDI0cHg7IGJhY2tncm91bmQtY29sb3I6ICM2YzcwZGMiPjxoMSBzdHlsZT0iIGNvbG9yOiAjZmZmOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMzJweDsgZm9udC13ZWlnaHQ6IDYwMDsgIiA+UmVtaW5kZXI8L2gxPjwvdGQ+PC90cj48dHI+PHRkIHN0eWxlPSJwYWRkaW5nOiAzMnB4OyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyNHB4Ij48cCBzdHlsZT0ibWFyZ2luOiAwIj5IaSB7c3RhZmZfbmFtZX0sPGJyPjxicj5XZSB3b3VsZCBsaWtlIHRvIHJlbWluZCB5b3UgdGhhdCB5b3UgaGF2ZSBhbiBhcHBvaW50bWVudCBmb3Ige3NlcnZpY2VfbmFtZX0gb24ge2FwcG9pbnRtZW50X2RhdGVfdGltZX0gYXQge2xvY2F0aW9uX25hbWV9Ljxicj48YnI+QmVzdCBSZWdhcmRzLDxicj57Y29tcGFueV9uYW1lfS48L3A+PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT48L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvYm9keT48L2h0bWw+JyBXSEVSRSBgc3ViamVjdGAgSVMgTlVMTCBBTkQgYGJvZHlgIElTIE5VTEwgQU5EIGB0eXBlYCA9ICdlbWFpbCcgQU5EIGBzZW5kX3RvYCA9ICdzdGFmZicgQU5EIGBhY3Rpb25gID0gJ3JlbWluZGVyX2JlZm9yZSc7CgpVUERBVEUgYHt0YWJsZXByZWZpeH1ub3RpZmljYXRpb25zYCBTRVQgYHN1YmplY3RgID0gJ0FjY2VzcyB0byBDdXN0b21lciBQYW5lbCcsIGBib2R5YCA9ICc8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgLz48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI\","saas_url":""}